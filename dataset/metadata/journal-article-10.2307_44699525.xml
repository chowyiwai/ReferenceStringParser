<?xml version="1.0" encoding="UTF-8"?>


<article dtd-version="1.0" article-type="research-article">
  <front>
      <journal-meta>
         <journal-id xmlns:xlink="http://www.w3.org/1999/xlink" journal-id-type="jstor">saetransactions</journal-id>
         <journal-id xmlns:xlink="http://www.w3.org/1999/xlink" journal-id-type="jstor">j50019997</journal-id>
         <journal-title-group xmlns:xlink="http://www.w3.org/1999/xlink">
            <journal-title>SAE Transactions</journal-title>
         </journal-title-group>
      
         <publisher>
            <publisher-name>SOCIETY OF AUTOMOTIVE ENGINEERS, INC.</publisher-name>
         </publisher>
         <issn xmlns:xlink="http://www.w3.org/1999/xlink" pub-type="ppub">0096736X</issn>
         <issn xmlns:xlink="http://www.w3.org/1999/xlink" pub-type="epub">25771531</issn>
         <custom-meta-group xmlns:xlink="http://www.w3.org/1999/xlink"/>
      </journal-meta>
      <article-meta xmlns:xlink="http://www.w3.org/1999/xlink">
         <volume xmlns:mml="http://www.w3.org/1998/Math/MathML"
                 xmlns:oasis="http://docs.oasis-open.org/ns/oasis-exchange/table">113</volume>
         <issue-id>i40197103</issue-id>
         <article-id pub-id-type="jstor">44699525</article-id>
         <title-group>
            <article-title>Model-based Testing of Embedded Automotive Software using MTest</article-title>
         </title-group>
         <contrib-group>
            <contrib>
               <string-name>
                  <given-names>Klaus</given-names>
                  <surname>Lamberg</surname>
               </string-name>
            </contrib>
            <contrib>
               <string-name>
                  <given-names>Michael</given-names>
                  <surname>Beine</surname>
               </string-name>
            </contrib>
            <contrib>
               <string-name>
                  <given-names>Mario</given-names>
                  <surname>Eschmann</surname>
               </string-name>
            </contrib>
            <contrib>
               <string-name>
                  <given-names>Rainer</given-names>
                  <surname>Otterbach</surname>
               </string-name>
            </contrib>
            <contrib>
               <string-name>
                  <given-names>Mirko</given-names>
                  <surname>Conrad</surname>
               </string-name>
            </contrib>
            <contrib>
               <string-name>
                  <given-names>Ines</given-names>
                  <surname>Fey</surname>
               </string-name>
            </contrib>
         </contrib-group>
         <pub-date pub-type="ppub">
            <day>1</day>
            <month>1</month>
            <year>2004</year>
         </pub-date>
         <fpage>132</fpage>
         <lpage>140</lpage>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
         <permissions>
            <copyright-statement>Copyright 2005 Society of Automotive Engineers, Inc.</copyright-statement>
         </permissions>
         <self-uri xlink:href="https://www.jstor.org/stable/44699525"/>
      
      
         <abstract>
            <p>Permanently increasing software complexity of today's electronic control units (ECUs) makes testing a central and significant task within embedded software development. While new software functions are still being developed or optimized, other functions already undergo certain tests, mostly on module level but also on system and integration level. Testing must be done as early as possible within the automotive development process. Typically ECU software developers test new function modules by stimulating the code with test data and capturing the modules' output behavior to compare it with reference data. This paper presents a new and systematic way of testing embedded software for automotive electronics, called MTest. MTest combines the classical module test with model-based development. The central element of MTest is the classification-tree method, which has originally been developed by the DaimlerChrysler research department. The classification-tree method exists for several years now and is mostly used for C-code testing. Now, it has been adopted to the needs of a model-based development process for embedded systems. MTest opens a new way of assuring quality for embedded software, that is especially designated for automotive software developers. This paper demonstrates, how MTest is used to test automotive software from model-in-the-loop over software-in-the-loop down to processor-in-the-loop testing. Additionally, test scenarios once developed using MTest can be reused in a hardware-in-the-loop environment. Thus, MTest provides a means to automatically test automotive software within the whole development process.</p>
         </abstract>
         <custom-meta-group>
            <custom-meta>
               <meta-name>lang</meta-name>
               <meta-value>eng</meta-value>
            </custom-meta>
         </custom-meta-group>
      </article-meta>
  </front>
  <back>
    
      <ref-list>
        <title>REFERENCES</title>
        <ref id="d29e312a1310">
            <label>1</label>
          
            <mixed-citation id="d29e319" publication-type="other">
dSPACE TargetLink poduct information:
http://www.dspaceinc.com.</mixed-citation>
        </ref>
        <ref id="d29e329a1310">
            <label>2</label>
          
            <mixed-citation id="d29e336" publication-type="other">
Köster, L.; Thomsen, t.; Stracke, R.: Connecting
Simulink to Osek: Automatic Code Generation for
Real-Time Operating Systems with TargetLink. SAE
2001, March 5-8, 2001, Detroit, Michigan, USA Tech-
nical Paper 2001-01-0024</mixed-citation>
        </ref>
        <ref id="d29e355a1310">
            <label>3</label>
          
            <mixed-citation id="d29e362" publication-type="other">
v. Zanten, A.; Erhardt, R.; Landesfeind, K.; Pfaff, G.:
Stability Control. In: R. K. Jurgen (Ed.): Automotive
Electronics Handbook. 2nd edition, Mc Graw-Hill,
1999</mixed-citation>
        </ref>
        <ref id="d29e378a1310">
            <label>4</label>
          
            <mixed-citation id="d29e385" publication-type="other">
Broekman, E.; Notenboom, E.: Testing Embedded
Software. Addison-Wesley, 2003</mixed-citation>
        </ref>
        <ref id="d29e396a1310">
            <label>5</label>
          
            <mixed-citation id="d29e403" publication-type="other">
Grochtmann, M.; Grimm, K.: Classification Trees for
Partition Testing. Software Testing, Verification and
Reliability, 3, 63-82, 1993</mixed-citation>
        </ref>
        <ref id="d29e416a1310">
            <label>6</label>
          
            <mixed-citation id="d29e423" publication-type="other">
Conrad, M.;Dörr, H.; Stuermer, I.; Schuerr, A.:
Graph Transformations for Model-based Testing.
Proc. of Modellierung 2002, Tutzing (D), März 2002</mixed-citation>
        </ref>
        <ref id="d29e436a1310">
            <label>7</label>
          
            <mixed-citation id="d29e443" publication-type="other">
Lamberg, K., Richert, J.; Rasche, R.: A New Envi-
ronment for Integrated Development and Manage-
ment of ECU Tests. SAE 2003-01-1024, 2003.</mixed-citation>
        </ref>
        <ref id="d29e456a1310">
            <label>8</label>
          
            <mixed-citation id="d29e463" publication-type="other">
dSPACE Automation Desk product information:
http://www.dspaceinc.com.</mixed-citation>
        </ref>
      </ref-list>
    
  </back>
</article>


