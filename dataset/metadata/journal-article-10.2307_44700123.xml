<?xml version="1.0" encoding="UTF-8"?>


<article dtd-version="1.0" article-type="research-article">
  <front>
      <journal-meta>
         <journal-id xmlns:xlink="http://www.w3.org/1999/xlink" journal-id-type="jstor">saetransactions</journal-id>
         <journal-id xmlns:xlink="http://www.w3.org/1999/xlink" journal-id-type="jstor">j50019997</journal-id>
         <journal-title-group xmlns:xlink="http://www.w3.org/1999/xlink">
            <journal-title>SAE Transactions</journal-title>
         </journal-title-group>
      
         <publisher>
            <publisher-name>SAE International</publisher-name>
         </publisher>
         <issn xmlns:xlink="http://www.w3.org/1999/xlink" pub-type="ppub">0096736X</issn>
         <issn xmlns:xlink="http://www.w3.org/1999/xlink" pub-type="epub">25771531</issn>
         <custom-meta-group xmlns:xlink="http://www.w3.org/1999/xlink"/>
      </journal-meta>
      <article-meta xmlns:xlink="http://www.w3.org/1999/xlink">
         <volume xmlns:mml="http://www.w3.org/1998/Math/MathML"
                 xmlns:oasis="http://docs.oasis-open.org/ns/oasis-exchange/table">115</volume>
         <issue-id>i40197108</issue-id>
         <article-id pub-id-type="jstor">44700123</article-id>
         <title-group>
            <article-title>Static Memory and Execution Time Analysis of Embedded Code</article-title>
         </title-group>
         <contrib-group>
            <contrib>
               <string-name>
                  <given-names>Christian</given-names>
                  <surname>Ferdinand</surname>
               </string-name>
            </contrib>
            <contrib>
               <string-name>
                  <given-names>Reinhold</given-names>
                  <surname>Heckmann</surname>
               </string-name>
            </contrib>
         </contrib-group>
         <pub-date pub-type="ppub">
            <day>1</day>
            <month>1</month>
            <year>2006</year>
         </pub-date>
         <fpage>905</fpage>
         <lpage>911</lpage>
      
      
      
      
      
      
      
      
         <permissions>
            <copyright-statement>Copyright 2007 Society of Automotive Engineers, Inc.</copyright-statement>
         </permissions>
         <self-uri xlink:href="https://www.jstor.org/stable/44700123"/>
      
      
         <abstract>
            <p>Failure of a safety-critical application on an embedded processor can lead to severe damage or even loss of life. Here we are concerned with two kinds of failure: stack overflow, which usually leads to run-time errors that are difficult to diagnose, and failure to meet deadlines, which is catastrophical for systems with hard real-time characteristics. Classical validation methods like code review and testing with repeated measurements require a lot of effort, are expensive, and do not really help in proving the absence of such errors. Abslnt's tools StackAnalyzer and aiT (timing analyzer) provide a solution to this problem. They use abstract interpretation as a formal method that allows to obtain statements valid for all program runs with all inputs.</p>
         </abstract>
         <custom-meta-group>
            <custom-meta>
               <meta-name>lang</meta-name>
               <meta-value>eng</meta-value>
            </custom-meta>
         </custom-meta-group>
      </article-meta>
  </front>
  <back>
    
      <ref-list>
        <title>REFERENCES</title>
        <ref id="d806e199a1310">
            <label>1</label>
          
            <mixed-citation id="d806e206" publication-type="other">
Abslnt Angewandte Informatik GmbH. aiSee Home
Page, http://www.aisee.com.</mixed-citation>
        </ref>
        <ref id="d806e216a1310">
            <label>2</label>
          
            <mixed-citation id="d806e223" publication-type="other">
Patrick Cousot and Radhia Cousot. Abstract Inter-
pretation: A Unified Lattice Model for Static Analysis
of Programs by Construction or Approximation of Fix-
points. In Proceedings of the 4th ACM Symposium
on Principles of Programming Languages, Los An-
geles, California, 1977.</mixed-citation>
        </ref>
        <ref id="d806e246a1310">
            <label>3</label>
          
            <mixed-citation id="d806e253" publication-type="other">
Christian Ferdinand. Cache Behavior Prediction for
Real-Time Systems. PhD thesis, Saarland Univer-
sity, 1997.</mixed-citation>
        </ref>
        <ref id="d806e266a1310">
            <label>4</label>
          
            <mixed-citation id="d806e273" publication-type="other">
Christian Ferdinand, Reinhold Heckmann, Marc Lan-
genbach, Florian Martin, Michael Schmidt, Henrik
Theiling, Stephan Thesing, and Reinhard Wilhelm.
Reliable and precise WCET determination for a real-
life processor. In Proceedings of EMSOFT 2001,
First Workshop on Embedded Software, volume
2211 of Lecture Notes in Computer Science, pages
469-485. Springer-Verlag, 2001.</mixed-citation>
        </ref>
        <ref id="d806e303a1310">
            <label>5</label>
          
            <mixed-citation id="d806e310" publication-type="other">
Reinhold Heckmann, Marc Langenbach, Stephan
Thesing, and Reinhard Wilhelm. The influence of
processor architecture on the design and the re-
sults of WCET tools. Proceedings of the IEEE,
91 (7):1038-1054, July 2003. Special Issue on Real-
Time Systems.</mixed-citation>
        </ref>
        <ref id="d806e333a1310">
            <label>6</label>
          
            <mixed-citation id="d806e340" publication-type="other">
Winfried Janz. Das OSEK Echtzeitbetriebssystem,
Stackverwaltung und statische Stackbedarfsanalyse.
In Embedded World, Nuremberg, Germany, Febru-
ary 2003.</mixed-citation>
        </ref>
        <ref id="d806e356a1310">
            <label>7</label>
          
            <mixed-citation id="d806e363" publication-type="other">
Marc Langenbach, Stephan Thesing, and Reinhold
Heckmann. Pipeline modeling for timing analysis.
In Proceedings of the 9th International Static Anal-
ysis Symposium SAS 2002, volume 2477 of Lec-
ture Notes in Computer Science, pages 294-309.
Springer-Verlag, 2002.</mixed-citation>
        </ref>
        <ref id="d806e386a1310">
            <label>8</label>
          
            <mixed-citation id="d806e393" publication-type="other">
Florian Martin, Martin Alt, Reinhard Wilhelm, and
Christian Ferdinand. Analysis of Loops. In Kai
Koskimies, editor, Proceedings of the International
Conference on Compiler Construction (CC'98), vol-
ume 1 383 of Lecture Notes in Computer Science,
pages 80-94. Springer-Verlag, March /April 1998.</mixed-citation>
        </ref>
        <ref id="d806e416a1310">
            <label>9</label>
          
            <mixed-citation id="d806e423" publication-type="other">
JÃ¶rn Schneider and Christian Ferdinand. Pipeline
Behavior Prediction for Superscalar Processors by
Abstract Interpretation. In Proceedings of the ACM
SIGPLAN Workshop on Languages, Compilers and
Tools for Embedded Systems, volume 34, pages 35-
44, May 1999.</mixed-citation>
        </ref>
        <ref id="d806e446a1310">
            <label>10</label>
          
            <mixed-citation id="d806e453" publication-type="other">
John A. Stankovic. Real-Time and Embedded Sys-
tems. ACM 50th Anniversary Report on Real-
Time Computing Research, 1996. http://www-
ccs.cs.umass.edu/sdcr/rt.ps.</mixed-citation>
        </ref>
        <ref id="d806e470a1310">
            <label>11</label>
          
            <mixed-citation id="d806e477" publication-type="other">
Henrik Theiling. Extracting Safe and Precise Con-
trol Flow from Binaries. In Proceedings of the 7th
Conference on Real-Time Computing Systems and
Applications, Cheju Island, South Korea, 2000.</mixed-citation>
        </ref>
        <ref id="d806e493a1310">
            <label>12</label>
          
            <mixed-citation id="d806e500" publication-type="other">
Henrik Theiling. ILP-based interprocedural path
analysis. In Alberto L. Sangiovanni-Vincentelli and
Joseph Sifakis, editors, Proceedings of EMSOFT
2002, Second International Conference on Embed-
ded Software, volume 2491 of Lecture Notes in Com-
puter Science, pages 349-363. Springer-Verlag,
2002.</mixed-citation>
        </ref>
        <ref id="d806e526a1310">
            <label>13</label>
          
            <mixed-citation id="d806e533" publication-type="other">
Henrik Theiling and Christian Ferdinand. Combin-
ing abstract interpretation and I LP for microarchitec-
ture modelling and program path analysis. In Pro-
ceedings of the 19th IEEE Real-Time Systems Sym-
posium, pages 144-153, Madrid, Spain, December
1998.</mixed-citation>
        </ref>
        <ref id="d806e556a1310">
            <label>14</label>
          
            <mixed-citation id="d806e563" publication-type="other">
Reinhard Wilhelm. Determining bounds on execution
times. In R. Zurawski, editor, Handbook on Embed-
ded Systems, pages 14-1 -14-23. CRC Press, 2005.</mixed-citation>
        </ref>
      </ref-list>
    
  </back>
</article>


